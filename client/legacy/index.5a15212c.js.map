{"version":3,"file":"index.5a15212c.js","sources":["../../../../node_modules/svelte/transition.mjs","../../../../src/routes/index.svelte"],"sourcesContent":["import { cubicOut, cubicInOut } from './easing';\nimport { assign, is_function } from './internal';\n\nexport function fade(node, {\n\tdelay = 0,\n\tduration = 400\n}) {\n\tconst o = +getComputedStyle(node).opacity;\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\tcss: t => `opacity: ${t * o}`\n\t};\n}\n\nexport function fly(node, {\n\tdelay = 0,\n\tduration = 400,\n\teasing = cubicOut,\n\tx = 0,\n\ty = 0,\n\topacity = 0\n}) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\tconst od = target_opacity * (1 - opacity);\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n\t};\n}\n\nexport function slide(node, {\n\tdelay = 0,\n\tduration = 400,\n\teasing = cubicOut\n}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst height = parseFloat(style.height);\n\tconst padding_top = parseFloat(style.paddingTop);\n\tconst padding_bottom = parseFloat(style.paddingBottom);\n\tconst margin_top = parseFloat(style.marginTop);\n\tconst margin_bottom = parseFloat(style.marginBottom);\n\tconst border_top_width = parseFloat(style.borderTopWidth);\n\tconst border_bottom_width = parseFloat(style.borderBottomWidth);\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: t =>\n\t\t\t`overflow: hidden;` +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`height: ${t * height}px;` +\n\t\t\t`padding-top: ${t * padding_top}px;` +\n\t\t\t`padding-bottom: ${t * padding_bottom}px;` +\n\t\t\t`margin-top: ${t * margin_top}px;` +\n\t\t\t`margin-bottom: ${t * margin_bottom}px;` +\n\t\t\t`border-top-width: ${t * border_top_width}px;` +\n\t\t\t`border-bottom-width: ${t * border_bottom_width}px;`\n\t};\n}\n\nexport function scale(node, {\n\tdelay = 0,\n\tduration = 400,\n\teasing = cubicOut,\n\tstart = 0,\n\topacity = 0\n}) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n\t};\n}\n\nexport function draw(node, {\n\tdelay = 0,\n\tspeed,\n\tduration,\n\teasing = cubicInOut\n}) {\n\tconst len = node.getTotalLength();\n\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n\t};\n}\n\nexport function crossfade({ fallback, ...defaults }) {\n\tconst to_receive = new Map();\n\tconst to_send = new Map();\n\n\tfunction crossfade(from, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = d => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px);\n\t\t\t`\n\t\t};\n\t}\n\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, {\n\t\t\t\trect: node.getBoundingClientRect()\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst { rect } = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\n\t\t\t\t\treturn crossfade(rect, node, params);\n\t\t\t\t}\n\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\n\treturn [\n\t\ttransition(to_send, to_receive, false),\n\t\ttransition(to_receive, to_send, true)\n\t];\n}","<script>\n\timport {onMount} from \"svelte\";\n\timport { fade } from 'svelte/transition';\n\n\tlet canvas, ctx, i, prevX, prevY;\n\tlet innerWidth;\n\tlet innerHeight; \n\tlet current;\n\tlet mounted = false;\n\tlet strokes;\n\n\tlet update = () => {\n\t\tcurrent.forEach(brush => {\n\t\t\tfor(i = 0; i < strokes; i++) {\n\t\t\t\tctx.lineWidth = Math.random() * 70 + 10;\n\t\t\t\tctx.beginPath();\n\t\t\t\tprevX = brush.x;\n\t\t\t\tprevY = brush.y;\n\t\t\t\tbrush.x = brush.x + (Math.random() * 30 - 15);\n\t\t\t\tbrush.y = brush.y + (Math.random() * 30 - 15);\n\t\t\t\tif (brush.x < 0) {\n\t\t\t\t\tbrush.x = innerWidth;\n\t\t\t\t\tprevX = brush.x;\n\t\t\t\t} else if (brush.x > innerWidth) {\n\t\t\t\t\tbrush.x = 0;\n\t\t\t\t\tprevX = brush.x;\n\t\t\t\t} \n\t\t\t\tif (brush.y < 0) {\n\t\t\t\t\tbrush.y = innerHeight;\n\t\t\t\t\tprevY = brush.y;\n\t\t\t\t} else if (brush.y > innerHeight) {\n\t\t\t\t\tbrush.y = 0;\n\t\t\t\t\tprevY = brush.y;\n\t\t\t\t}\n\t\t\t\tctx.moveTo(prevX, prevY);\n\t\t\t\tctx.fillStyle = `rgba(${~~((brush.x / innerWidth) * 255)}, ${~~((brush.y / innerHeight) * 255)}, 150, 0.2)`;\n\t\t\t\tctx.ellipse(brush.x, brush.y, 50, 40, (Math.random() * 6 / Math.PI), 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t})\n\t}\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t$: if(innerWidth && mounted) {\n\t\tstrokes = 10;\n\t\tcanvas.width = innerWidth;\n\t\tcanvas.height = innerHeight;\n\t\tcurrent = [{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t}];\n\t\tctx = canvas.getContext(\"2d\");\n\t}\n</script>\n\n<style>\n\tp {\n\t\ttext-align: center;\n\t\tmargin: 1em auto;\n\t}\n\ta {\n\t\tfont-size: 3em;\n\t\tpadding: 30px;\n\t}\n\ta:hover {\n\t\tcolor: #555;\n\t}\n\tcanvas {\n\t\tposition: fixed;\n\t\toverflow: hidden;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: -1;\n\t}\n</style>\n\n<svelte:window bind:innerWidth bind:innerHeight />\n<svelte:body on:mousemove={update} on:touchstart={update} on:touchmove={update} />\n\n<svelte:head>\n\t<title>Oskar Eriksson | Interactive Developer & Technical Director</title>\n</svelte:head>\n        \n<canvas bind:this={canvas}></canvas>\n        \n<header>\n\t<p>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"mailto:oskar@oskareriksson.se\" target=\"_blank\">Mail</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://github.com/theodeus\" target=\"_blank\">Github</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://twitter.com/_oskareriksson\" target=\"_blank\">Twitter</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://www.linkedin.com/in/oskar-eriksson-00422446/\" target=\"_blank\">LinkedIn</a>\n\t</p>\n</header>\n"],"names":["fade","node","delay","duration","o","getComputedStyle","opacity","css","t","update","canvas","ctx","i","prevX","prevY","innerWidth","innerHeight","current","strokes","mounted","onMount","width","height","x","y","getContext","forEach","brush","lineWidth","Math","random","beginPath","moveTo","fillStyle","ellipse","PI","fill","closePath"],"mappings":"wLAGO,SAASA,EAAKC,aACpBC,MAAAA,aAAQ,QACRC,SAAAA,aAAW,MAELC,GAAKC,iBAAiBJ,GAAMK,cAE3B,CACNJ,MAAAA,EACAC,SAAAA,EACAI,IAAK,SAAAC,4BAAiBA,EAAIJ,2ICqFDK,sDAAuBA,qDAAsBA,qoDAUzD,CAAEN,SAAU,0CACZ,CAAEA,SAAU,0CACZ,CAAEA,SAAU,0CACZ,CAAEA,SAAU,oFAbAM,yDAAuBA,wDAAsBA,kGA7FnEC,EAAQC,EAAKC,EAAGC,EAAOC,EACvBC,EACAC,EACAC,EAEAC,EADAC,GAAU,SAmCdC,EAAQ,uBACPD,GAAU,6LAGLJ,GAAcI,gBACnBD,EAAU,IACVR,EAAOW,MAAQN,gBACfL,EAAOY,OAASN,4BAChBC,EAAU,CAAC,CACVM,EAAGR,EAAa,EAChBS,EAAGR,EAAc,GAElB,CACCO,EAAGR,EAAa,EAChBS,EAAGR,EAAc,GAElB,CACCO,EAAGR,EAAa,EAChBS,EAAGR,EAAc,GAElB,CACCO,EAAGR,EAAa,EAChBS,EAAGR,EAAc,GAElB,CACCO,EAAGR,EAAa,EAChBS,EAAGR,EAAc,aAElBL,EAAMD,EAAOe,WAAW,qDA5DZ,WACZR,EAAQS,QAAQ,SAAAC,OACXf,EAAI,EAAGA,EAAIM,EAASN,IACvBD,EAAIiB,UAA4B,GAAhBC,KAAKC,SAAgB,uBACrCnB,EAAIoB,sBACJlB,EAAQc,EAAMJ,aACdT,EAAQa,EAAMH,GACdG,EAAMJ,EAAII,EAAMJ,GAAqB,GAAhBM,KAAKC,SAAgB,IAC1CH,EAAMH,EAAIG,EAAMH,GAAqB,GAAhBK,KAAKC,SAAgB,IACtCH,EAAMJ,EAAI,GACbI,EAAMJ,EAAIR,YACVF,EAAQc,EAAMJ,IACJI,EAAMJ,EAAIR,IACpBY,EAAMJ,EAAI,YACVV,EAAQc,EAAMJ,IAEXI,EAAMH,EAAI,GACbG,EAAMH,EAAIR,YACVF,EAAQa,EAAMH,IACJG,EAAMH,EAAIR,IACpBW,EAAMH,EAAI,YACVV,EAAQa,EAAMH,IAEfb,EAAIqB,OAAOnB,EAAOC,GAClBH,EAAIsB,4BAAwBN,EAAMJ,EAAIR,EAAc,qBAAaY,EAAMH,EAAIR,EAAe,+BAC1FL,EAAIuB,QAAQP,EAAMJ,EAAGI,EAAMH,EAAG,GAAI,GAAqB,EAAhBK,KAAKC,SAAeD,KAAKM,GAAK,EAAG,EAAIN,KAAKM,IACjFxB,EAAIyB,OACJzB,EAAI0B"}