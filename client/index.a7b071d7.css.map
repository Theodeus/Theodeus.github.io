{
  "version": 3,
  "file": "index.a7b071d7.css",
  "sources": [
    "..\\..\\..\\..\\..\\..\\src\\routes\\index.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport {onMount} from \"svelte\";\n\timport { fade } from 'svelte/transition';\n\n\tlet canvas, ctx, i, prevX, prevY;\n\tlet innerWidth;\n\tlet innerHeight; \n\tlet current;\n\tlet mounted = false;\n\tlet strokes;\n\tlet brushRadiusX;\n\tlet brushRadiusY;\n\n\tlet update = () => {\n\t\tcurrent.forEach(brush => {\n\t\t\tfor(i = 0; i < strokes; i++) {\n\t\t\t\tctx.lineWidth = Math.random() * 70 + 10;\n\t\t\t\tctx.beginPath();\n\t\t\t\tprevX = brush.x;\n\t\t\t\tprevY = brush.y;\n\t\t\t\tbrush.x = brush.x + (Math.random() * 30 - 15);\n\t\t\t\tbrush.y = brush.y + (Math.random() * 30 - 15);\n\t\t\t\tif (brush.x < 0) {\n\t\t\t\t\tbrush.x = innerWidth;\n\t\t\t\t\tprevX = brush.x;\n\t\t\t\t} else if (brush.x > innerWidth) {\n\t\t\t\t\tbrush.x = 0;\n\t\t\t\t\tprevX = brush.x;\n\t\t\t\t} \n\t\t\t\tif (brush.y < 0) {\n\t\t\t\t\tbrush.y = innerHeight;\n\t\t\t\t\tprevY = brush.y;\n\t\t\t\t} else if (brush.y > innerHeight) {\n\t\t\t\t\tbrush.y = 0;\n\t\t\t\t\tprevY = brush.y;\n\t\t\t\t}\n\t\t\t\tctx.moveTo(prevX, prevY);\n\t\t\t\tctx.fillStyle = `rgba(${~~((brush.x / innerWidth) * 255)}, ${~~((brush.y / innerHeight) * 255)}, 150, 0.2)`;\n\t\t\t\tctx.ellipse(brush.x, brush.y, brushRadiusX, brushRadiusY, (Math.random() * 6 / Math.PI), 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t})\n\t}\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t$: if(innerWidth && mounted) {\n\t\tstrokes = 10;\n\t\tcanvas.width = innerWidth;\n\t\tcanvas.height = innerHeight;\n\t\tbrushRadiusX = innerWidth / 25;\n\t\tbrushRadiusY = innerHeight / 25;\n\t\tcurrent = [{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t},\n\t\t{\n\t\t\tx: innerWidth / 2,\n\t\t\ty: innerHeight / 2\n\t\t}];\n\t\tctx = canvas.getContext(\"2d\");\n\t}\n</script>\n\n<style>\n\tp {\n\t\ttext-align: center;\n\t\tmargin: 1em auto;\n\t}\n\ta {\n\t\tfont-size: 3em;\n\t\tpadding: 30px;\n\t}\n\ta::selection {\n\t\tbackground: #990099;\n\t\tcolor: #bb0099;\n\t}\n\ta:hover {\n\t\tcolor: #555;\n\t}\n\tcanvas {\n\t\tposition: fixed;\n\t\toverflow: hidden;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: -1;\n\t}\n</style>\n\n<svelte:window bind:innerWidth bind:innerHeight />\n<svelte:body on:mousemove={update} on:touchstart={update} on:touchmove={update} />\n\n<svelte:head>\n\t<title>Oskar Eriksson | Interactive Developer & Technical Director</title>\n</svelte:head>\n        \n<canvas bind:this={canvas}></canvas>\n        \n<header>\n\t<p>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"mailto:oskar@oskareriksson.se\" target=\"_blank\">Mail</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://github.com/theodeus\" target=\"_blank\">Github</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://twitter.com/_oskareriksson\" target=\"_blank\">Twitter</a>\n\t\t<a in:fade=\"{{ duration: 2000 }}\" href=\"https://www.linkedin.com/in/oskar-eriksson-00422446/\" target=\"_blank\">LinkedIn</a>\n\t</p>\n</header>\n"
  ],
  "names": [],
  "mappings": "AAgFC,CAAC,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AACD,CAAC,cAAC,CAAC,AACF,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,IAAI,AACd,CAAC,AACD,eAAC,WAAW,AAAC,CAAC,AACb,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AACf,CAAC,AACD,eAAC,MAAM,AAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,MAAM,cAAC,CAAC,AACP,QAAQ,CAAE,KAAK,CACf,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,EAAE,AACZ,CAAC"
}